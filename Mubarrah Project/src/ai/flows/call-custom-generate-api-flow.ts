'use server';
/**
 * @fileOverview Calls the user's custom /generate API endpoint.
 *
 * - callCustomGenerateApi - A function that takes a prompt and returns the generated text.
 * - CallCustomGenerateApiInput - The input type for the callCustomGenerateApi function.
 * - CallCustomGenerateApiOutput - The return type for the callCustomGenerateApi function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const CallCustomGenerateApiInputSchema = z.object({
  prompt: z.string().describe('The prompt to send to the custom /generate API.'),
});
export type CallCustomGenerateApiInput = z.infer<typeof CallCustomGenerateApiInputSchema>;

const CallCustomGenerateApiOutputSchema = z.object({
  generated_text: z.string().describe('The text generated by the custom API.'),
});
export type CallCustomGenerateApiOutput = z.infer<typeof CallCustomGenerateApiOutputSchema>;

export async function callCustomGenerateApi(input: CallCustomGenerateApiInput): Promise<CallCustomGenerateApiOutput> {
  return callCustomGenerateApiFlow(input);
}

const callCustomGenerateApiFlow = ai.defineFlow(
  {
    name: 'callCustomGenerateApiFlow',
    inputSchema: CallCustomGenerateApiInputSchema,
    outputSchema: CallCustomGenerateApiOutputSchema,
  },
  async (input: CallCustomGenerateApiInput) => {
    // IMPORTANT: Replace 'YOUR_API_BASE_URL' with the actual base URL of your API.
    // For example, if your API is running locally on port 3000, it would be 'http://localhost:3000'.
    const apiUrl = "http://localhost:5000/generate"


    try {
      const response = await fetch(apiUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ prompt: input.prompt }),
      });

      if (!response.ok) {
        const errorText = await response.text();
        console.error(`Custom API call failed with status ${response.status}: ${errorText}`);
        return { generated_text: `Error: Custom API request failed with status ${response.status}. Details: ${errorText}` };
      }

      const responseData = await response.json();
      
      if (typeof responseData.generated_text !== 'string') {
        console.error('Custom API response did not contain a valid "generated_text" string field:', responseData);
        return { generated_text: "Error: Custom API response was not in the expected format (missing 'generated_text' string)." };
      }

      return { generated_text: responseData.generated_text };

    } catch (error: any) {
      console.error('Error calling custom /generate API:', error);
      return { generated_text: `Error calling your custom API: ${error.message}. Please ensure the API is running and YOUR_API_BASE_URL is correctly set.` };
    }
  }
);